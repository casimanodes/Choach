// import React, { useState, useEffect } from 'react';

// export default function ImageUpload() {
//   const [uploadedImage, setUploadedImage] = useState<string | null>(null);
//   const [isClient, setIsClient] = useState(false);

//   useEffect(() => {
//     setIsClient(true);
//   }, []);

//   const handleImageUpload = (event: React.ChangeEvent<HTMLInputElement>) => {
//     if (!isClient) return;

//     const file = event.target.files?.[0];
//     if (file) {
//       const reader = new FileReader();
//       reader.onload = (e) => {
//         setUploadedImage(e.target?.result as string);
//       };
//       reader.readAsDataURL(file);
//     }
//   };

//   return (
//     <div>
//       <h3 className="font-semibold mb-2">Upload your progress:</h3>
//       <input
//         type="file"
//         accept="image/*"
//         onChange={handleImageUpload}
//         className="mb-2"
//         aria-label="Upload progress image"
//       />
//       {uploadedImage && (
//         <img src={uploadedImage} alt="Uploaded progress" className="w-full h-auto mt-2" />
//       )}
//     </div>
//   );
// }



// import { useState } from 'react';

// export default function ImageUpload() {
//   const [image, setImage] = useState<File | null>(null);
//   const [message, setMessage] = useState('');

//   const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {
//     if (e.target.files && e.target.files[0]) {
//       setImage(e.target.files[0]);
//     }
//   };

//   const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => { //kotroll later, could be a problem that it is defined like that
//     e.preventDefault();

//     if (!image) {
//       setMessage('Please select an image first.');
//       return;
//     }

//     const formData = new FormData();
//     formData.append('image', image);

//     try {
//       const response = await fetch('/api/upload', {
//         method: 'POST',
//         body: formData,
//       });

//       if (!response.ok) {
//         throw new Error(`Failed to upload image: ${response.statusText}`);
//       }

//       const result = await response.json();
//       setMessage(`Image uploaded successfully. Image ID: ${result.id}`);
//     } catch (error) {
//       setMessage((error as Error).message);
//     }
//   };

//   return (
//     <div>
//       <form onSubmit={handleSubmit}>
//         <label htmlFor="imageUpload">Upload Image:</label>
//         <input id="imageUpload" type="file" accept="image/*" onChange={handleImageChange} />
//         <button type="submit">Upload Image</button>
//       </form>
//       {message && <p>{message}</p>}
//     </div>
//   );
// }
// WOKRS FINE



//simple waay to display the picture to the website: import React, { useState, useEffect } from 'react';

// export default function ImageUpload() {
//     const [uploadedImage, setUploadedImage] = useState<string | null>(null);
//     const [isClient, setIsClient] = useState(false);
  
//     useEffect(() => {
//       setIsClient(true);
//     }, []);
  
//     const handleImageUpload = (event: React.ChangeEvent<HTMLInputElement>) => {
//       if (!isClient) return;
  
//       const file = event.target.files?.[0];
//       if (file) {
//         const reader = new FileReader();
//         reader.onload = (e) => {
//           setUploadedImage(e.target?.result as string);
//         };
//         reader.readAsDataURL(file);
//       }
//     };
  
//     return (
//       <div>
//         <h3 className="font-semibold mb-2">Upload your progress:</h3>
//         <input
//           type="file"
//           accept="image/*"
//           onChange={handleImageUpload}
//           className="mb-2"
//           aria-label="Upload progress image"
//         />
//         {uploadedImage && (
//           <img src={uploadedImage} alt="Uploaded progress" className="w-full h-auto mt-2" />
//         )}
//       </div>
//     );
//   }

